import React,  {useEffect, useState} from 'react'
import { Grid, Typography, CardMedia, Box, Card, List, ListItem, ListItemText, Stack, Chip} from "@mui/material"
import { Footer } from "../../components/Footer/Footer";
import { NavBar } from "../../components/NavBar/NavBar";
import { SearchCategory } from "../../components/SearchCategory/SearchCategory";
import { useData } from "../../hook/useData";
import { styled } from '@mui/material/styles';
import Paper from '@mui/material/Paper';
import { getTopicById, getTopicsByCategory } from '../../shared/service';

const Item = styled(Paper)(({ theme }) => ({
  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',
  ...theme.typography.body2,
  padding: theme.spacing(1),
  textAlign: 'center',
  color: theme.palette.text.secondary,
}));


export const Category = () => {

  let id = 10;
  const [title, setTitle] = useState(null);
  const [description, setDescription] = useState();
  const [url, setUrl] = useState(null);
  const [tags, setTags] = useState(null);
  const [author, setAuthor] = useState(null);
  const [date, setDate] = useState(null);
  const [dateUpdate, setDateUpdate] = useState(null);
  const [category, setCategory] = useState(null);
  const [categoryID, setCategoryID] = useState(null);
  const [titleTopic, setTitleTopic] = useState(null);
  const [ID, setID] = useState(id);

  useEffect(()=>{
      const getTheme = async () => {
          const response = await getTopicById(Number(ID));
          const title = response.title;
          const description = response.description;
          const url = response.image;
          const tags = response.tags;
          const author = response.author;
          const date = response.publishDate;
          const updateDate = response.updateDate;
          const category = response.category.title;
          const categoryID = response.category.id;
          
          setTitle(title);
          setDescription(description);
          setUrl(url);
          setTags(tags);
          setAuthor(author);
          setDate(date);
          setDateUpdate(updateDate);
          setCategory(category);
          setCategoryID(categoryID);
          setID(ID);
  
      const getThemeByCategory = async () => {
          const responseTopic = await getTopicsByCategory(categoryID);
          const titleTopic = responseTopic;
          setTitleTopic(titleTopic);
      };
      getThemeByCategory();
          
      };
      getTheme();
  }, [ID])

  return (
    <div>
        <Grid container spacing={0.5} padding={5}>
            <Grid xs={3} marginRight={10}>
                <Box>
                    <ListItem button className='title-theme' >
                        <Typography variant="h4" noWrap overflow="visible" padding={5}>
                            {category}
                        </Typography>
                    </ListItem>
                    <List>
                        {titleTopic?.map(e=>(
                            <ListItem button divider >
                                <ListItemText primary={e.title} onClick={()=>{
                                    setID(e.id)
                                }}/>
                            </ListItem>
                        ))}
                    </List>
                </Box>
            </Grid>
            <Grid xs={5}>
                <Box display='flex' flexDirection='column'>
                    <Item>
                        <Typography variant="h4" fontSize={30}  fontWeight={800} noWrap overflow="visible" padding={5} className="title-theme">
                            {title}
                        </Typography>
                    </Item>
                    <Box boxShadow={3} width="100%" overflow="hidden" className="contenido">
                        <Item>
                            <Typography variant="body1" overflow="visible" textAlign="justify" padding={5}>
                            
                            </Typography>
                        </Item>
                        <Item marginBottom={5} display={"flex"} alignItems={"center"} justifyContent={"center"}>
                            {
                                <Stack direction="row" spacing={1}>
                                    {tags?.map(e=>(
                                        <Chip label={e} className="tags"></Chip>
                                    ))}
                                </Stack>
                            }
                        </Item>
                    </Box>
                </Box>
            </Grid>
            <Grid xs={2.5} marginTop={15}>
                <Item marginLeft={5} className="img-theme">
                    <img src={url} ></img>
                </Item>
                <Item height={50}>
                    <Typography variant="body1" overflow="visible" textAlign="justify" marginTop={5} marginLeft={5}>
                        {`Categor√≠a: ${category}`}   
                    </Typography>
                </Item>
                
                
            </Grid>
        </Grid>    
    </div>
    
)
}
